# Default values for airconnect.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- upgrade strategy type (e.g. Recreate or RollingUpdate)
strategyType: Recreate

image:
  # -- Docker registry/repository to pull the image from
  repository: 1activegeek/airconnect
  # -- Overrides the default tag (appVersion) used in Chart.yaml ([Docker Hub](https://hub.docker.com/r/1activegeek/airconnect/tags?page=1))
  tag: 1.8.3
  # -- Docker image pull policy
  pullPolicy: IfNotPresent

# -- Docker image pull policy
imagePullSecrets: []

# -- additional ENV variables to set. Prefix with AIRCAST_VAR to target Airconnect configuration values
env: {}
  # TZ: UTC

# -- set environment variables from Secret(s)
envFromSecrets: []
  # secrets are required before `helm install`

# -- declare extra volumes to use for Airconnect
extraVolumes: []
# -- declare additional volume mounts
extraVolumeMounts: []

# nameOverride -- Overrides the name of resources
nameOverride: ""

# fullnameOverride -- Overrides the Full Name of resources
fullnameOverride: ""

# Probes configuration
probes:
  liveness:
    enabled: false
    initialDelaySeconds: 30
    failureThreshold: 5
    timeoutSeconds: 10
  readiness:
    enabled: false
    initialDelaySeconds: 30
    failureThreshold: 5
    timeoutSeconds: 10
  startup:
    enabled: false
    failureThreshold: 30
    periodSeconds: 10

useHostNetwork: true

service:
  # -- Type of Service to use
  type: ClusterIP
  # -- Port the Service should communicate on
  port: ~
  ## Specify the nodePort value for the LoadBalancer and NodePort service types.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ##
  # nodePort:
  ## Provide any additional annotations which may be required. This can be used to
  ## set the LoadBalancer service type to internal only.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  annotations: {}
  labels: {}

  # -- Set specific IP address for LoadBalancer. `service.type` must be set to `LoadBalancer`
  loadBalancerIP:

  # loadBalancerSourceRanges: []
  ## Set the externalTrafficPolicy in the Service to either Cluster or Local
  # externalTrafficPolicy: Cluster

  # default IP family to use for the service
  ipFamilyPolicy: SingleStack
  # ipFamilies for service
  ipFamilies: []

ingress:
  # -- Enables the use of an Ingress Controller to front the Service and can provide HTTPS
  enabled: false

  # -- ingressClassName for using on clusters with multiple ingresses, default is null
  ingressClassName: ~

  # -- annotations to configure your Ingress. See your Ingress Controller's Docs for more info.
  annotations: {}

  # -- list of hosts and their paths that ingress controller should repsond to.
  hosts:
    - host: chart.example.local
      paths:
        - '/'

  # -- list of TLS configurations
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Set resource limits/requests for the Pod(s)
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  #   gpu.intel.com/i915: 1
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  #   gpu.intel.com/i915: 1

# -- Set Security Context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000
  # privileged: true

# -- Node Selector configuration
nodeSelector: {}

# -- Node toleration configuration
tolerations: []

# -- Set Pod affinity rules
affinity: {}

# -- Set additonal pod Annotations
podAnnotations: {}